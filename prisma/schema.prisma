
generator client {
  provider = "prisma-client-js"
  binaryTargets = ["native", "rhel-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}
      
model User {
  id               Int       @id @default(autoincrement())
  email            String    @unique
  password         String?
  username         String    @unique
  name             String?
  role             String    @default("user")
  createdAt        DateTime  @default(now())
  updatedAt        DateTime  @updatedAt

  bindles          Bindle[]
  notifications    Notification[]
  userSettings     UserSettings?
}

model Bindle {
  id               Int       @id @default(autoincrement())
  title            String
  description      String?
  createdAt        DateTime  @default(now())
  updatedAt        DateTime  @updatedAt

  userId           Int
  user             User      @relation(fields: [userId], references: [id])

  cloudApps        CloudApp[]
  llmData          LLMData?
}

model CloudApp {
  id               Int       @id @default(autoincrement())
  name             String
  apiEndpoint      String
  dataFormat       String
  createdAt        DateTime  @default(now())
  updatedAt        DateTime  @updatedAt

  bindles          Bindle[]
}

model LLMData {
  id               Int       @id @default(autoincrement())
  bindleId         Int       @unique
  processedData    Json
  createdAt        DateTime  @default(now())
  updatedAt        DateTime  @updatedAt

  bindle           Bindle    @relation(fields: [bindleId], references: [id])
}

model Notification {
  id               Int       @id @default(autoincrement())
  message          String
  type             String
  status           String
  createdAt        DateTime  @default(now())
  updatedAt        DateTime  @updatedAt

  userId           Int
  user             User      @relation(fields: [userId], references: [id])
}

model UserSettings {
  id               Int       @id @default(autoincrement())
  userId           Int       @unique
  realTimeUpdates  Boolean   @default(true)
  createdAt        DateTime  @default(now())
  updatedAt        DateTime  @updatedAt

  user             User      @relation(fields: [userId], references: [id])
}